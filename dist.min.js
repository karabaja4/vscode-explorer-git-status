function injectGitFileStatus(){async function e(e){const t={cwd:s(e)};return new Promise((e,o)=>{n("git rev-parse --show-toplevel",t,(t,r,n)=>t?o(t):e(r.trim()))})}async function t(e){const t={cwd:s(e)};return new Promise((e,o)=>{n("git status --short --ignored",t,(t,r,n)=>{if(t)o(t);else{const t=r.split("\n"),o=t.filter(e=>e.startsWith("?? ")).map(e=>l(e)),n=t.filter(e=>e.startsWith(" M ")).map(e=>l(e)),s=t.filter(e=>e.startsWith("!! ")).map(e=>l(e));e({added:o,modified:n,ignored:s,stdout:r})}})})}async function o(){const n=document.getElementById("workbench.view.explorer"),s=n&&n.getElementsByClassName("explorer-folders-view")[0],i=s&&s.getElementsByClassName("monaco-tree")[0],l=i&&i.getElementsByClassName("monaco-tree-row")[0],g=l&&l.getElementsByClassName("explorer-item")[0];if(g){const n=r.normalize(r.dirname(g.getAttribute("title"))),s=u||(u=await e(n)),{added:i,modified:l,stdout:h}=await t(s);if(h==w)return void setTimeout(o,a);w=h;const y=new Set,v=new Set;let x="";for(let e of i){for(let t of c(e))y.add(t);x+=p(s,e,`color:${f};`)}for(let e of l){for(let t of c(e))v.add(t);x+=p(s,e,`color:${m};`)}for(let e of y)x+=p(s,e,`color:${f};`);for(let e of v)x+=p(s,e,`color:${m};`);d.innerHTML!==x&&(d.innerHTML=x)}setTimeout(o,a)}const r=require("path"),n=require("child_process").exec,s=e=>"~"===e[0]?r.join(process.env.HOME,e.slice(1)):e,i=e=>{const t=process.env.HOME;if(t&&e.startsWith(t)){const o=new RegExp(`^${t}`);return e.replace(o,"~")}return e},l=e=>r.normalize(e.substr(3)).replace(/\\+$/,"").replace(/\/+$/,"").replace(/\\/g,"\\\\"),c=e=>{let t=1;const o=[],n=r.sep.replace(/\\/g,"\\\\");for(;t=e.indexOf(n,t)+1;)o.push(e.substr(0,t-1));return o},a=5e3,f="#32ff32",m="#fffc32",d=document.createElement("style");document.body.appendChild(d);const p=(e,t,o)=>`#workbench\\.view\\.explorer .explorer-folders-view .monaco-tree .monaco-tree-rows .monaco-tree-row .explorer-item[title="${i(r.join(e,t).replace(/\\/g,"\\\\"))}" i]{${o}}`+"\r\n";let u,w;setTimeout(o,a)}injectGitFileStatus();